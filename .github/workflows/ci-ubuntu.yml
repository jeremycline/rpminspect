name: CI on Ubuntu

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    build:
        # This job runs directly on the Ubuntu host provided by GitHub Actions
        runs-on: ubuntu-latest

        # All of these steps run from within the main source
        # directory, so think of that as your $PWD
        steps:
            # This means clone the git repo
            - uses: actions/checkout@v2

            # Within the container, install the build dependencies and
            # test suite dependencies
            - name: Install Build Dependencies
              run: |
                  sudo dpkg --add-architecture i386
                  sudo apt-get update
                  sudo apt-get -y install gcc meson gettext pkg-config libjson-c-dev libxml2-dev libzstd-dev librpm-dev libarchive-dev libelf-dev libkmod-dev libcurl4-openssl-dev libyaml-dev libssl-dev libcap-dev libxmlrpc-core-c3-dev libcunit1-dev ksh rc tcsh zsh valgrind gcovr python3-setuptools python3-pip libffi-dev rpm desktop-file-utils sssd python3-rpm gcc-multilib
                  sudo apt-get -y install linux-headers-$(uname -r)
                  sudo apt-get -y install libc-dev:i386
                  sudo pip3 install cpp-coveralls rpmfluff PyYAML

            # The mandoc package on Ubuntu lacks libmandoc.a and
            # header files, which we need to build rpminspect
            - name: Build and Install libmandoc (Ubuntu lacks libmandoc.a and the headers)
              run: |
                  curl -O https://mandoc.bsd.lv/snapshots/mandoc.tar.gz
                  SUBDIR="$(tar -tvf mandoc.tar.gz | head -n 1 | rev | cut -d ' ' -f 1 | rev)"
                  tar -xvf mandoc.tar.gz
                  cd ${SUBDIR}
                  echo 'PREFIX=/usr/local'                     >  configure.local
                  echo 'BINDIR=/usr/local/bin'                >> configure.local
                  echo 'SBINDIR=/usr/local/sbin'              >> configure.local
                  echo 'MANDIR=/usr/local/share/man'          >> configure.local
                  echo 'INCLUDEDIR=/usr/local/include'        >> configure.local
                  echo 'LIBDIR=/usr/local/lib'                >> configure.local
                  echo 'LN="ln -sf"'                          >> configure.local
                  echo 'MANM_MANCONF=mandoc.conf'             >> configure.local
                  echo 'INSTALL_PROGRAM="install -D -m 0755"' >> configure.local
                  echo 'INSTALL_LIB="install -D -m 0755"'     >> configure.local
                  echo 'INSTALL_HDR="install -D -m 0644"'     >> configure.local
                  echo 'INSTALL_MAN="install -D -m 0644"'     >> configure.local
                  echo 'INSTALL_DATA="install -D -m 0644"'    >> configure.local
                  echo 'INSTALL_LIBMANDOC=1'                  >> configure.local
                  echo 'CFLAGS="-g -fPIC"'                    >> configure.local
                  ./configure
                  make
                  sudo make lib-install
                  cd ..
                  rm -rf mandoc.tar.gz ${SUBDIR}

            # Set up the source tree to build
            - name: setup
              run: meson setup build --werror -Db_buildtype=debug -Db_coverage=true

            # Compile the software
            - name: build
              run: ninja -C build -v

            # Run the test suite
            - name: test
              run: meson test -C build -v

            # Generate code coverage reports (requires
            # -Db_coverage=true on 'meson setup')
            - name: coverage
              run: ninja -C build coverage
